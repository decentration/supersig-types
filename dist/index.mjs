import"@polkadot/api-base/types/consts";import"@polkadot/api-base/types/errors";import"@polkadot/api-base/types/events";import"@polkadot/api-base/types/storage";import"@polkadot/api-base/types/submittable";import"@polkadot/rpc-core/types/jsonrpc";import"@polkadot/api-base/types/calls";import"@polkadot/types/types/registry";var e=Object.freeze({__proto__:null,default:{types:{Role:{_enum:{Standard:"Vec<u8>",Master:"Vec<u8>",NotMember:"Vec<u8>"}},SupersigId:"u32",CallId:"u32",ProposalStates:"Vec<ProposalState<AccountId>>",FetchListProposals:{proposals_info:"ProposalStates",no_of_members:"u32"},ProposalState:{id:"CallId",encoded_call:"Vec<u8>",provider:"AccountId",voters:"Vec<AccountId>"},FetchProposalState:{proposal_info:"ProposalState<AccountId>",no_of_members:"u32"}}}});const t=Object.values(e).reduce(((e,{types:t})=>({...e,...t})),{}),s={superSig:{getProposalState:{description:"Get the proposal state",params:[{name:"supersig_id",type:"AccountId"},{name:"call_id",type:"CallId"}],type:"FetchProposalState"},getUserSupersigs:{description:"Get supersigs associated to the user.",params:[{name:"user_account",type:"AccountId"}],type:"Vec<SupersigId>"},listMembers:{description:"List members of the supersig",params:[{name:"supersig_id",type:"AccountId"}],type:"Vec<(AccountId, Role)>"},listProposals:{description:"List proposals associated to a supersig",params:[{name:"supersig_id",type:"AccountId"}],type:"FetchListProposals"}}},o={types:[{minmax:[0,void 0],types:t}],rpc:s},p={types:t,rpc:s},a=({types:e={},rpc:o={},...p}={})=>({types:{...t,...e},rpc:{...s,...o},...p});export{p as defaultOptions,s as mRpc,t as mTypes,a as options,o as typesBundleForPolkadotApps};
